/*! \page contract_details Requesting Contract Details

	@ref IBApi::ContractDetails can be received from the API by the @ref IBApi::EClient::reqContractDetails function. This method takes as argument a @ref IBApi::Contract object which may be incompletely-defined and so
	not matching a single contract in IB's database unambiguously. In reply, fully-defined contract objects with all fields specified which match the supplied Contract's parameters will be individually returned to the
	IBApi::EWrapper::contractDetails function. The one exception is Bond contracts, which will be returned to the function IBApi::EWrapper::bondContractDetails. Because of market data license restrictions, there are only
	a few available fields to be returned in a bond contract description, namely the minTick, exchange, currency, and short name. 

	One particular use of the IBApi::EClient::reqContractDetails function is to request an option chain. See @ref option_chains for more details. 
	
	\section broadtape_list  Obtaining BroadTape List of News
	
	The example below shows an "incomplete" news @ref IBApi::Contract with no symbol or currency defined. In most cases using such a contract would result in an invalid 
	contract details error since a symbol or localSymbol is required. @ref IBApi::EClient::reqContractDetails will instead use it to obtain the whole BroadTape news chain from the TWS.
	
	<ul id="tab">
		<li class="active">
			\snippet ContractSamples.cs newsFeedforquery
			...
			\snippet Program.cs reqcontractdetailsnews
		</li>
		<li> 
			\snippet ContractSamples.java newsfeedforquery
			...
			\snippet Testbed.java reqcontractdetailsnews
		</li>
		<li>
			\snippet ContractSamples.vb newsfeedforquery
			...
			\snippet MainModule.vb reqcontractdetailsnews
		</li>
		<li>
			\snippet ContractSamples.cpp newsfeedforquery
			...
			\snippet TestCppClient.cpp reqcontractdetailsnews
		</li>
		<li>
			\snippet ContractSamples.py newsfeedforquery
			...
			\snippet Program.py reqcontractdetailsnews
		</li>
	</ul>
	
	All returned objects will be delivered via @ref IBApi::EWrapper::contractDetails. Once all contracts have been delivered the @ref IBApi::EWrapper::contractDetailsEnd marker will be triggered
	to notify it.
	
	<ul id="tab">
		<li class="active"> 
			\snippet EWrapperImpl.cs ewrapperimpl
			...
			\snippet EWrapperImpl.cs contractdetails
			...
			\snippet EWrapperImpl.cs contractdetailsend
		</li>
		<li>
			\snippet EWrapperImpl.java ewrapperimpl
			...
			\snippet EWrapperImpl.java contractdetails
			...
			\snippet EWrapperImpl.java contractdetailsend
		</li>
		<li>
			\snippet EWrapperImpl.vb ewrapperimpl
			...
			\snippet EWrapperImpl.vb contractdetails
			...
			\snippet EWrapperImpl.vb contractdetailsend
		</li>
		<li>
			\snippet TestCppClient.h ewrapperimpl
			...
			\snippet TestCppClient.cpp contractdetails
			...
			\snippet TestCppClient.cpp contractdetailsend
		</li>
		<li>
			\snippet Program.py ewrapperimpl
			...
			\snippet Program.py contractdetails
			...
			\snippet Program.py contractdetailsend
		</li>
	</ul>
	
	<b>Important:</b> due to the potentially high amount of data resulting from such queries this request is subject to pacing. Although a request such as the above one will be answered immediately,
	a similar subsequent one will be kept on hold for one minute. This amount of time will increase if more such requests are performed. To prevent this narrow down the amount of eligible contracts
	by providing an expiration date specifying at least the year (i.e. 2016) or the year and the month (i.e. 201603 for March 2016).
	
	<br></br>
	
*/