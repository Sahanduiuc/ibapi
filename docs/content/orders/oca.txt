/*! \page oca One Cancels All

	The <a target="_blank" class="linkexternal" href="https://www.interactivebrokers.com/en/index.php?f=583">One-Cancels All</a> (OCA) order type allows an investor to place multiple and 
	possibly unrelated orders assigned to a group. The aim is to complete just one of the orders, which in turn will cause TWS to cancel the remaining orders. 
	The investor may submit several orders aimed at taking advantage of the most desirable price within the group. Completion of one piece of the group order causes cancellation of 
	the remaining group orders while partial completion causes the group to re-balance. An investor might desire to sell 1000 shares of only ONE of three positions held above 
	prevailing market prices. The OCA order group allows the investor to enter prices at specified target levels and if one is completed, the other two will automatically cancel. 
	Alternatively, an investor may wish to take a LONG position in eMini S&P stock index futures in a falling market or else SELL US treasury futures at a more favorable price. 
	Grouping the two orders using an OCA order type offers the investor two chances to enter a similar position, while only running the risk of taking on a single position. 
		
		
	<ul id="tab">
		<li class="active"> 
			\snippet OrderSamples.cs oca
			...
			\snippet Program.cs ocasubmit
		</li>
		<li>
			\snippet OrderSamples.java oca
			...
			\snippet Testbed.java ocasubmit
		</li>
		<li>
			\snippet OrderSamples.vb oca
			...
			\snippet MainModule.vb ocasubmit
		</li>
		<li>
			\snippet OrderSamples.cpp oca
			...
			\snippet TestCppClient.cpp ocasubmit
		</li>
		<li>
			\snippet OrderSamples.py oca
			...
			\snippet Program.py ocasubmit
		</li>
	</ul>
		
	\section oca_types OCA Types
	
	Via the @ref IBApi::Order::OcaType attribute, the way in which remaining orders should be handled after an execution can be configured as indicated in the table below:
	
	<table>
		<tr><th>Value</th><th>Description</th></tr>
		<tr><td>1</td><td>Cancel all remaining orders with block.*</td></tr>
		<tr><td>2</td><td>Remaining orders are proportionately reduced in size with block.*</td></tr>
		<tr><td>3</td><td>Remaining orders are proportionately reduced in size with no block.</td></tr>
	</table>
		
	Note*: if you use a value "with block" gives your order has overfill protection. This means that only one order in the group will be routed at a time to remove the possibility of an overfill. 
		
	<br><br>
*/