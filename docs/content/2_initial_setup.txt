/*! \page initial_setup Initial Setup

	\section tws The Trader Workstation
	
	Our market maker-designed IB Trader Workstation (TWS) lets traders, investors and institutions trade stocks, options, futures, forex, bonds and funds on over 100 markets worldwide 
	from a single account. The TWS API is a programming interface to the TWS and as such, it forcefully requires a TWS to connect to. To use version 9.72+ of the API, it is necessary to have TWS version 952 or higher. 

	\section gateway The IB Gateway
	
	The only alternative to the TWS is the IB Gateway. From the TWS API perspective, the IB Gateway and the TWS are identical: both represent nothing but a server to which it can open a
	socket connection. From the user perspective however the IB Gateway is a lightweight application through which he can only make use of the TWS API. As opposed to the TWS' rich user interface,
	the IB Gateway does not provide the end user with anything else than the very basic features to handle API connections. On the other hand, the IB Gateway does not need to be restarted
	every 24 hours and can therefore be used to run indefinitely.
	
	<b>For simplicity, this guide will mostly refer to the TWS although the reader should understand that for the TWS API's purposes, TWS and IB Gateway are synonymous.</b>
	
	\section enable_api Enable API connections
		
	Before any client application can connect to the Trader Workstation, the TWS needs to be configured to listen for incoming API connections on a very specific port. To do this simply access
	the TWS' API settings via Edit -> Global Configuration -> API -> Settings and make sure the "Enable ActiveX and Socket Clients" option is activated as shown below:
	
	\image html enable_socket.png
	
	Also important to mention is the "Socket port". By default the TWS will listen on ports <b>7496</b> or <b>7497</b> although this value can be changed to whichever port number as long as
	the specific port is available. This is particularly important to remember in case multiple TWS are running on the same computer (i.e. live and paper trading). Since 
	only one application can listen on one port at a time you will need to assign different ports to each running TWS.
	
	<b>Important: when running paper and live TWS on the same computer, make sure your client application is connecting to the right TWS!</b>
		
	\section read_only Read Only API

	The API Settings dialogue allows you to configure the TWS not to accept any orders being sent via the TWS API. This is enabled by default and is an additional security measure you can enable when the API client
	is only intended to request information from the TWS. Note that no information about orders will be available to the API when read-only mode is enabled. 
		
	\section master_client Master Client ID

	By default the "Master Client ID" field is unset. To specify that a certain client should automatically receive updates about all open orders, as well as to receive commission reports from an execution resulting from an order being placed by any client, that client's ID should be set as the Master Client ID in TWS or IBG Global Configuration. The clientID is one of the parameters specified from an API client application in the initial function call to IBApi::EClientSocket::eConnect.

	\section install Installing the API source
	
	The API itself can be downloaded and installed from:
	
	http://interactivebrokers.github.io/
	
	Many third party applications already have their own version of the API which is installed in the process of installing the third party application. If using a third party product, it should first be verified if the API must be separately installed and what version of the API is needed- many third party products are only compatible with a specific API version. 
	
	The Windows version of the API installer will create a directory "C:\TWS API\" for the API source code in addition to automatically copying two files into the Windows directory for the ActiveX/DDE and C++ APIs. It is important that the API installs to the C: drive, as otherwise API applications may not be able to find the associated files. 
	
	\section changing Changing the installed API version
	
	(On Windows Only)

	If a different version of the ActiveX (v9.71 or lower) or C++ API is required than the one currently installed on the system, there are additional steps required to uninstall the previous API version to manually remove a file called "TwsSocketClient.dll":
	
	1) Uninstall the API from the "Add/Remove Tool" in the Windows Control Panel as usual
	
	2) Locate the file "C:\Windows\SysWOW64\TwsSocketClient.dll". Delete this file.
	
	3) Restart the computer before installing a different API version.
		
	<br><br>
*/